CREATE TABLE IF NOT EXISTS users(
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT uq_user_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS task_states(
    ID BIGINT NOT NULL,
    name VARCHAR(255) NOT NULL,
    CONSTRAINT pk_task_states PRIMARY KEY (ID),
    CONSTRAINT uq_task_state_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS task_priority(
    ID BIGINT NOT NULL,
    name VARCHAR(255) NOT NULL,
    CONSTRAINT pk_task_priority PRIMARY KEY (ID),
    CONSTRAINT uq_task_priority_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS tasks(
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(255) NULL,
    performer BIGINT NOT NULL,
    author BIGINT NOT NULL,
    state BIGINT NOT NULL,
    priority BIGINT NOT NULL,
    CONSTRAINT pk_tasks PRIMARY KEY (ID),
    CONSTRAINT fk_tasks_author FOREIGN KEY(author) REFERENCES users(id) ON DELETE CASCADE,
    CONSTRAINT fk_tasks_performer FOREIGN KEY(performer) REFERENCES users(id),
    CONSTRAINT fk_tasks_state FOREIGN KEY(state) REFERENCES task_states(id),
    CONSTRAINT fk_tasks_priority FOREIGN KEY(priority) REFERENCES task_priority(id)
);

CREATE TABLE IF NOT EXISTS comments(
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    text VARCHAR(255) NOT NULL,
    task BIGINT NOT NULL,
    author BIGINT NOT NULL,
    CONSTRAINT pk_comments PRIMARY KEY (ID),
    CONSTRAINT fk_comments_author FOREIGN KEY(author) REFERENCES users(ID) ON DELETE CASCADE,
    CONSTRAINT fk_comments_task FOREIGN KEY(task) REFERENCES tasks(ID) ON DELETE CASCADE
);
